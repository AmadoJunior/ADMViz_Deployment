server {
  # Listen HTTP
    listen 80;
    listen [::]:80;

  # Server Name
    server_name ${APP_DOMAIN};
    server_tokens off;

  # Challenge
    location ~ ^/.well-known/acme-challenge/ {
      default_type "text/plain";
      # Define Root Location
      root         /var/www/certbot;
    }

  # Temp Proxy Config
    # location ~ ^/(api|sdr) {
    #     proxy_pass http://${API_HOST}:8080;
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
    #     proxy_set_header X-Forwarded-Server $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }
    
    # location / {
    #     proxy_pass http://${CLIENT_HOST}:3000;
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
    #     proxy_set_header X-Forwarded-Server $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }

  # Else Redirect to HTTPS // API
    location / {
      return 301 https://$host$request_uri;
    }
}

server {
  # Listen HTTPS
    listen 443 default_server ssl;
    listen [::]:443 ssl;
    http2 on;

  # Server Name
    server_name ${APP_DOMAIN};
    server_tokens off;

  # SSL Config
    ssl_certificate /etc/letsencrypt/live/${APP_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${APP_DOMAIN}/privkey.pem;

  # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "0" always; #Deprecated
    add_header Cross-Origin-Opener-Policy "same-origin";
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Proxy Config
    location ~ ^/(api|sdr) {
        proxy_pass http://${API_HOST}:8080;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    
    location / {
        proxy_pass http://${CLIENT_HOST}:3000;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}
